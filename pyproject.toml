[tool.poetry]
name = "eduplatform"
version = "0.1.0"
description = "Modern microservices-based online education platform"
authors = ["Senior Python Developer <dev@eduplatform.com>"]
readme = "README.md"
packages = [
    { include = "shared" },
]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
sqlalchemy = "^2.0.23"
alembic = "^1.12.1"
# asyncpg = "^0.29.0"  # Temporary disabled for Python 3.13
psycopg = {extras = ["binary", "pool"], version = "^3.1.0"}  # Alternative PostgreSQL driver
redis = "^5.0.1"
celery = "^5.3.4"
pydantic = {extras = ["email"], version = "^2.5.0"}
pydantic-settings = "^2.1.0"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-multipart = "^0.0.6"
aiofiles = "^23.2.0"
httpx = "^0.25.2"
structlog = "^23.2.0"
prometheus-client = "^0.19.0"

# Message brokers
aiokafka = "^0.9.0"
aio-pika = "^9.3.1"

# Video processing
opencv-python = "^4.8.1.78"
pillow = "^10.1.0"

# Testing
pytest = {version = "^7.4.3", optional = true}
pytest-asyncio = {version = "^0.21.1", optional = true}
pytest-cov = {version = "^4.1.0", optional = true}
factory-boy = {version = "^3.3.0", optional = true}

# Development
black = {version = "^23.11.0", optional = true}
isort = {version = "^5.12.0", optional = true}
flake8 = {version = "^6.1.0", optional = true}
mypy = {version = "^1.7.1", optional = true}
pre-commit = {version = "^3.5.0", optional = true}

[tool.poetry.extras]
test = ["pytest", "pytest-asyncio", "pytest-cov", "httpx", "factory-boy"]
dev = ["black", "isort", "flake8", "mypy", "pre-commit"]
all = ["pytest", "pytest-asyncio", "pytest-cov", "httpx", "factory-boy", "black", "isort", "flake8", "mypy", "pre-commit"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["shared", "app"]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
